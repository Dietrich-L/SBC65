	;-------	CEMAIN	-------

	;HAUPTPROGRAMM FUER DEN LAUSI-EMUF
	;INTERFACE CENTRONICS --> CE 60

	;BY D.LAUSBERG
	;V1.3	06.10.86
	;V1.4	18.06.92

	;SYSTEM CONFIGURATION

RAM	= $0000		;SYSTEM RAM
ZPAGE	= RAM
ONLINE	= ZPAGE		;ONLINE FLAG $80 = ONLINE
BUFST	= ZPAGE+1	;BUFFER STATUS $C0 = FULL
			;$40 = CHR AVAILABLE
FIRSTL	= ZPAGE+2	;FIRST BYTE IN BUFFER
FIRSTH	= ZPAGE+3
LASTL	= ZPAGE+4	;LAST BYTE IN BUFFER
LASTH	= ZPAGE+5
TEMPA	= ZPAGE+6
TEMPX	= ZPAGE+7
TEMPY	= ZPAGE+8
AUTOLF	= ZPAGE+9	;AUTOLF FLAG $80 = AUTOLF
LINCNT	= ZPAGE+10	;LINE COUNTER
PNTL	= ZPAGE+11	;POINTER
PNTH	= ZPAGE+12
PORTAR	= ZPAGE+13	;PORT A REGISTER
DELCNT	= ZPAGE+14	;DELAY COUNTER
STACK	= RAM+$1FF
BUFFER	= RAM+$200
HIMEM	= RAM+$400

OUT	= $5000		;8-BIT LATCH

VIA	= $6000		;6522 VIA
PORTB	= VIA
DDRB	= VIA+2
PORTA	= VIA+15
DDRA	= VIA+3

ACR	= VIA+11
PCR	= VIA+12
IFR	= VIA+13
IER	= VIA+14

EPROM	= $F800		;2716	2 KBYTE EPROM

	;SYSTEM CONSTANTS

DEFACR = %00000010		;PORTB LATCH ENABLE
DEFPCR = %10001111		;CB1/CB2 HANDSHAKE
				;CA1 CONT/ CA2 SCK
CA2L	= %10001101		;CA2 LOW FOR CLOCK PULSE
DEFIFR	= %00011010		;CB1/CB2/CA1 FLAG RESET
DEFDRB	= %00000000		;PB0 - PB7 ARE INPUTS

CODERR	= %01001111		;CODE 'E
CODTST	= %11111111		;CODE SEGMENT TEST
BLANK	= %00000000		;DISPLAY AUS
COD0	= %01111110		;CODE '0
COD1	= %00110000		;CODE '1
COD2	= %01101101		;CODE '2
COD3	= %01111001		;CODE '3
COD4	= %00110011		;CODE '4
COD5	= %01011011		;CODE '5
COD6	= %01011111		;CODE '6
COD7	= %01110000		;CODE '7
COD8	= %01111111		;CODE '8
COD9	= %01111011		;CODE '9
CODA	= %01110111		;CODE 'A
CODD	= %00111101		;CODE 'D
CODP	= %01100111		;CODE 'P

PAGLEN	= 72		;72 LINES PER PAGE
PRTLEN	= 62		;62 PRINT-LINES ON A SINGLE SHEET

KBDON	= $F9		;KEYBOARD TRENNEN
KBDOFF	= $F8		;KEYBOARD AKTIV
CODON	= $88		;CODE EIN
CODOFF	= $89		;CODE AUS

CR	= $0D		;CARRIAGE RETURN
LF	= $0A		;LINE FEED
ESC	= $1B		;ESCAPE
FF	= $0C		;FORM FEED
BELL	= $07		;BELL
BS	= $08		;BACKSPACE
HT	= $09		;TAB
ULON	= $11		;UNDERLINE ON
ULOFF	= $12		;UNDERLINE OFF
ROLDO	= $13		;ROLL DOWN
ROLUP	= $14		;ROLL UP

	ORG EPROM

RESET	LDX #STACK	;INITIALISE SYSTEM
	TXS		;SET STACKPOINTER
	CLD
	CLI
	JSR SETST	;SET STATUS
	JSR INDIS	;INITIALIZE DISPLAY
	JSR INCEN	;INITIALIZE CENTRONICS IF
	JSR INCE	;INITIALIZE CE 60

MAINLP	JSR DISST	;DISPLAY STATUS

CENTIN	BIT ONLINE	;CHECK ONLINE
	BPL CE60OT
	JSR TSTCEN	;TEST FOR CHARACTER
	BCC CE60OT
	BIT BUFST	;IS THE BUFFER FULL ?
	BMI CE60OT
	JSR CENIN	;INPUT FROM CENTRONICS AND
			;STORE THE CHR IN BUFFER

CE60OT	BIT BUFST	;CHECK BUFFER STATUS
	BVC CONTRL
	BMI CEPR
	BIT ONLINE	;CHECK ONLINE
	BPL CEPR
	JSR TSTCEN	;TEST CENTRONICS INPUT
	BCS CONTRL
CEPR	JSR GETCHR	;LOAD NEXT CHR TO ACCU
	CMP #$20	;TEST FOR COMMAND
	BCS CEPRNT
	JSR EXEC	;EXECUTE COMMAND
	JMP CONTRL
CEPRNT	JSR CEDRU	;PRINT THE CHR

CONTRL	BIT ONLINE	;CHECK ONLINE
	BMI ENDMLP
	BIT BUFST	;CHECK BUFFER STATUS
	BVS ENDMLP
	JSR SETUP	;DO SETTINGS

ENDMLP	JMP MAINLP

	;----	NMI ROUTINE	----

NMI	PHA
	LDA ONLINE	;TOGGLE ONLINE/OFFLINE
	EOR #$80
	STA ONLINE
	BIT ONLINE
	BMI NMIW1
	LDA #KBDOFF
	DB $2C
NMIW1	LDA #KBDON
	JSR DRIMM
	PLA
	RTI

	;----	IRQ ROUTINE	----

IRQ	RTI

	;----	SUBROUTINES	----

INCE	LDA #%11011111	;PORT A DEKLARIEREN
	STA PORTA
	STA PORTAR
	LDA #%00100010
	STA DDRA
CESYNC	BIT PORTA
	BMI ERRSYN	;KBRQ =	1 ?
	LDX #20
CESYN2	JSR CLOCK
	LDA #$01
	JSR DELAY	;1 MS WARTEN
	BIT PORTA
	BVS SYNCHR	;KBACK = 1 ?
	DEX
	BNE CESYN2
ERRSYN	LDA #CODERR
	JSR DISPLA
	JMP ERRSYN

SYNCHR	LDA #KBDON	;KEYBOARD TRENNEN
	JSR DRIMM
	LDA #$14	;DO A CR
	JSR DRIMM
	RTS

DELAY	STA DELCNT	;DELAY MS IN ACCU
	TYA
	PHA		;SAVE Y-REGISTER
DLOOP1	LDY #$C7
DELOOP	DEY
	BNE DELOOP
	DEC DELCNT
	BNE DLOOP1
	PLA
	TAY
	RTS

INCEN	LDA #DEFACR
	STA ACR
	LDA #DEFPCR
	STA PCR
	LDA #DEFIFR
	STA IFR
	STA IER
	LDA #DEFDRB
	STA DDRB
	STA PORTB	;RESET BUSY-LINE
	RTS

INDIS	LDA #CODTST	;TESTCODE ANZEIGEN
	JSR DISPLA
	RTS

SETUP	RTS		;NO SETTINGS IN V1.X

DISPLA	AND #$7F	;DISPLAY ACCU AND ONLINE BIT
	ORA ONLINE	;SET ONLINE BIT
	EOR #$FF	;INVERT TO DISPLAY
	STA OUT
	RTS

SETST	LDA #$00
	STA BUFST	;RESET BUFFER STATUS
	STA AUTOLF	;CLEAR AUTO LINEFEED
	STA LINCNT	;RESET LINE COUNTER
	STA FIRSTL
	STA LASTL
	LDA #$02
	STA FIRSTH
	STA LASTH
	LDA #$80
	STA ONLINE	;SET TO ONLINE

	RTS

CENIN	LDA #$10
	STA IFR		;RESET STROBE FLAG
	LDA PORTB	;READ CHR FROM CENTRONICS
	AND #$7F	;MASK OFF BIT 7
	JSR PUTCHR	;STORE CHR TO BUFFER
	STA PORTB	;RESET BUSY LINE
	RTS

TSTCEN	LDA IFR		;TEST FOR STROBE
	AND #$10
	BNE STROBE
	CLC		;NO CHR
	RTS
STROBE	SEC		;CHR RECEIVED
	RTS

PUTCHR	LDY #$00	;STORE CHR TO BUFFER
	STA (LASTL),Y
	LDA #$C0
	STA BUFST	;BUFFER FULL
	RTS

GETCHR	LDY #$00	;GET CHR FROM BUFFER
	LDA (FIRSTL),Y
	LDY #$00
	STY BUFST	;BUFFER EMPTY
	RTS

DISST	LDA PORTA	;DISPLAY STATUS
	AND #%00001000	;TEST DIN/ASCII-BIT
	BEQ STASC
	LDA #CODD
	JSR DISPLA
	RTS
STASC	LDA #CODA
	JSR DISPLA
	RTS

EXEC	CMP #ESC	;ESCAPE AUSFILTERN
	BEQ ESCEX
	STA TEMPA
	LDY #$00
LEXEC1	LDA TABCTL,Y
	BEQ EXERR
	CMP TEMPA	;CODE TESTEN
	BEQ CTLEXE
	INY
	INY
	INY
	BNE LEXEC1
CTLEXE	INY
	LDA TABCTL,Y	;LOW BYTE RETTEN
	PHA
	INY
	LDA TABCTL,Y	;HIGH BYTE RETTEN
	PHA
	RTS

TABCTL	DB CR
	DD CREXE-1
	DB LF
	DD LFEXE-1
	DB FF
	DD FFEXE-1
	DB BELL
	DD BELEXE-1
	DB BS
	DD BSEXE-1
	DB HT
	DD HTEXE-1
	DB ULON
	DD ULONX-1
	DB ULOFF
	DD ULOFFX-1
	DB ROLDO
	DD ROLDOX-1
	DB ROLUP
	DD ROLUPX-1
	DB $00

EXERR	JSR ERR1	;5 Sec BLINKENDES 'E
	RTS

ESCEX	JSR RDCHR	;READ CHR
	STA TEMPA
	LDY #$00
LESCEX	LDA TABESC,Y	;DECODE ESC SEQUENCE
	BEQ EXERR
	CMP TEMPA
	BEQ ESCEXE
	INY
	INY
	INY
	BNE LESCEX
ESCEXE	INY
	LDA TABESC,Y	;SAVE LOW BYTE
	PHA
	INY
	LDA TABESC,Y	;SAVE HIGH BYTE
	PHA
	RTS

TABESC	DB 'R'
	DD RESET-1
	DB $00

RDCHR	BIT BUFST	;TEST IF CHR AVAILABLE
	BNE RDCHR1
RDCHRL	JSR TSTCEN	;WAIT FOR CHR
	BCC RDCHRL
	JSR CENIN
	JSR PUTCHR
RDCHR1	JSR GETCHR	;GET CHR IN ACCU
	RTS

CREXE	BIT AUTOLF	;TEST AUTO LINE FEED
	BPL CREXEW
	JSR LFEXE
	RTS
CREXEW	LDA #$14
	JSR DRIMM
	RTS

LFEXE	LDA #$02
	JSR DRIMM	;DO A LINE FEED
	JSR NXTLIN	;ADJUST LINE COUNTER
	RTS

FFEXE	JSR LFEXE
	BCC FFEXE	;IF NOT END OF PAGE
	RTS

BELEXE	LDA #$F5	;RING THE BELL
	JSR DRIMM
	RTS

BSEXE	LDA #$03	;DO A BACKSPACE
	JSR DRIMM
	RTS

HTEXE	LDA #$01	;DO A TAB
	JSR DRIMM
	RTS

ULONX	LDA #$8A	;SET UNDERLINE ON
	JSR DRIMM
	RTS

ULOFFX	LDA #$8B	;SET UNDERLINE OFF
	JSR DRIMM
	RTS

ROLDOX	LDA #$07	;TIEFSTELLEN
	JSR DRIMM
	RTS

ROLUPX	LDA #$06	;HOCHSTELLEN
	JSR DRIMM
	RTS

ERR1	LDA #$0A
	STA TEMPA	;10 MAL BLINKEN
ERR1L	LDA #CODERR
	JSR BLINK
	DEC TEMPA
	BNE ERR1L
	RTS

BLINK	JSR DISPLA	;1 MAL BLINKEN
	LDA #$FA	;250 MS DELAY
	JSR DELAY
	LDA #BLANK
	JSR DISPLA
	LDA #$FA	;250 MS DELAY
	JSR DELAY
	RTS

NXTLIN	INC LINCNT	;INCREMENT LINE COUNTER
	LDA PORTA	;TEST FOR SINGLE SHEET
	AND #%00010000
	BEQ CONTI
	LDA LINCNT	;SINGLE SHEET
	CMP #PRTLEN	;> 62 LINES?
	BCC NXTLIX
NXTLIL	LDA #CODP	;'P AUSGEBEN
	JSR BLINK
	LDA IFR		;TEST FOR CONT-KEY
	AND #%00000010
	BEQ NXTLIL
	LDA #%00000010
	STA IFR		;RESET CA1 FLAG
NXTLI1	LDA #0 		;RESET LINE COUNTER
	STA LINCNT
	SEC
NXTLIX	RTS

CONTI	LDA LINCNT
	CMP #PAGLEN	;> 72 LINES
	BCC NXTLIX
	BCS NXTLI1


CEDRU	STA TEMPA	;SAVE CHR
	JSR GETPNT
	LDY #$60
CEDRUL	LDA (PNTL),Y	;TEST FOR CODE SEQUENCE
	BEQ CEDRU1
	CMP TEMPA
	BEQ CEDRU2
	INY
	INY
	BNE CEDRUL
CEDRU2	INY
	LDA (PNTL),Y	;GET SPECIAL CODE
	JSR CODDRU
	JMP CEDRUX

CEDRU1	LDA TEMPA	;CALCULATE OFFSET
	SEC
	SBC #$20
	TAY
	LDA (PNTL),Y	;GET CHR
DRIMM	JSR CESIO
CEDRUX	JSR KBSTAT	;TEST FOR KEY
	BCS TSTEIN
	RTS

GETPNT	LDA PORTA	;POINTER AUF CODETABELLE HOLEN
	AND #%00001000	;ASCII-BIT MASKIEREN
	BEQ SASCII
	LDA #DEU
	STA PNTL
	LDA #DEU/256
	STA PNTH
	RTS
SASCII	LDA #ASCII
	STA PNTL
	LDA #ASCII/256
	STA PNTH
	RTS

CODDRU	PHA		;SAVE CHR
	LDA #CODON
	JSR DRIMM
	PLA
	JSR DRIMM
	LDA #CODOFF
	JSR DRIMM
	RTS

TSTEIN	LDA #%00100000
	JSR SETBIT	;READY =	1
	LDA #$FF
	JSR CESIO
	PHA
	LDA #%11011111
	JSR RSTBIT	;READY =	0
	LDA #$FF
	JSR CESIO
	PLA
	RTS

CESIO	BIT PORTA	;PRINT A CHR
	BVC CESIO	;CE-60 READY
	STA TEMPA
	LDX #$08
CESIO1	ROL TEMPA
	BCC CESIO2
	LDA #%00000010
	JSR SETBIT	;SI =	1
	BCS CESIO3
CESIO2	LDA #%11111101
	JSR RSTBIT	;SI =	0
CESIO3	JSR CLOCK
	LDA PORTA
	LSR A
	DEX
	BNE CESIO1
	ROL TEMPA
	LDA TEMPA
	RTS

KBSTAT	LDA #%00100000
	JSR SETBIT	;READY =	1
	BIT PORTA
	BMI KBST1	;KBRQ =	1 ?
	CLC
	DB $24
KBST1	SEC
	LDA #%11011111
	JSR RSTBIT	;READY =	0
	RTS


SETBIT	ORA PORTAR
	STA PORTA
	STA PORTAR
	RTS


RSTBIT	AND PORTAR
	STA PORTA
	STA PORTAR
	RTS


CLOCK	LDA #CA2L
	STA PCR		;SCK = 0
	LDA #DEFPCR
	STA PCR		;SCK = 1
	RTS


DEU	DB $00,$21,$40,$5C,$24,$25,$20,$60
	DB $2A,$28,$5B,$5D,$2C,$2F,$2E,$26
	DB '0123456789',$3E,$3C,$7D,$29,$3F,$5F
	DB $23,'ABCDEFGHIJKLMNOPQRSTUVWXZY'
	DB $22,$3A,$7B,$5E,$3D
	DB $2B,'abcdefghijklmnopqrstuvwxzy'
	DB $27,$3B,$7C,$2D,$04
	
	DB $00,$00
	
ASCII	DB $00,$21,$40,$5C,$24,$25,$20,$60
	DB $2A,$28,$5B,$5D,$2C,$2F,$2E,$26
	DB '0123456789',$3E,$3C,$FF,$29,$FF,$5F
	DB $23,'ABCDEFGHIJKLMNOPQRSTUVWXZY'
	DB $22,$3A,$7B,$5E,$7D
	DB $2B,'abcdefghijklmnopqrstuvwxzy'
	DB $27,$3B,$7C,$2D,$04
	
	DB '<x>v',$00,$00

FREE
	DS $FFFA-FREE		;VEKTOREN AB $FFFA

	DW NMI
	DW RESET
	DW IRQ
	
	END
